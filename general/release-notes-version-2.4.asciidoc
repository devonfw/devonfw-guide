:toc: macro
toc::[]

:doctype: book
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

= devonfw Release notes 2.4 “EVE”

== Introduction

We are proud to announce the immediate release of devonfw version 2.4 (code named “EVE” during development). This version is the first one that fully embraces Open Source, including components like the documentation assets and CobiGen. Most of the IP (Intellectual Property or proprietary) part of devonfw are now published under the Apache License version 2.0 (with the documentation under the Creative Commons License (Attribution-NoDerivatives)). This includes the GitHub repositories where all the code and documentation is located. All of these repositories are now open for public viewing as well.

“EVE” contains a slew of new features but in essence it is already driven by what we expect to be the core focus of 2018: strengthening the platform and improving quality.

This release is also fully focused on deepening the platform rather than expanding it. That is to say: we have worked on improving existing features rather than adding new ones and strengthen the qualitative aspects of the software development life cycle, i.e. security, testing, infrastructure (CI, provisioning) etc.

“EVE” already is very much an example of this. This release contains the Allure Test Framework (included as an incubator in version 2.3) update called MrChecker Test Framework. MrChecker is an automated testing framework for functional testing of web applications, API web services, Service Virtualization, Security and in coming future native mobile apps, and databases. All modules have tangible examples of how to build resilient integration test cases based on delivered functions. 

Another incubator being updated is the devonfw Shop Floor which intended to be a compilation of DevOps experiences from the devonfw perspective. A new part of the release is the new Solution Guide for Application Security based on the state of the art in OWASP based application security. 

There is a whole range of new features and improvements which can be seen in that light. devon4j 2.6 changes and improves the package structure of the core Java framework. The My Thai Star sample app has now been upgraded to Angular 6, lots of bugs have been fixed and the devonfw Guide has once again been improved. 

Last but not least, this release contains the formal publication of the devonfw Methodology or The Accelerated Solution Design - an Industry Standards based solution design and specification (documentation) methodology for Agile (and less-than-agile) projects. 


== Changes and new features

=== devonfw 2.4 is Open Source

This version is the first release of devonfw that fully embraces Open Source, including components like the documentation assets and CobiGen. This is done in response to intensive market pressure and demands from the MU´s (Public Sector France, Netherlands)

Most of the IP (Intellectual Property or proprietary) part of devonfw are now published under the Apache License version 2.0 (with the documentation under the Creative Commons License (Attribution-NoDerivatives)). 

So you can now use the devonfw distribution (the "zip" file), CobiGen, the devonfw modules and all other components without any worry to expose the client unwittingly to Capgemini IP.

*Note:* there are still some components which are IP and are not published under an OSS license. The class room trainings, the Sencha components and some CobiGen templates. But these are not includes in the distribution nor documentation and are now completely maintained separately.

=== devonfw dist 

* Eclipse Oxygen integrated
** CheckStyle Plugin updated.
** SonarLint Plugin updated.
** Git Plugin updated.
** FindBugs Plugin updated.
** CobiGen plugin updated.
* Other Software
** Visual Studio Code latest version included and pre-configured with https://devonfw.com/website/pages/docs/cli.asciidoc.html#vscode.asciidoc
** Ant updated to latest.
** Maven updated to latest.
** Java updated to latest.
** Nodejs LTS updated to latest.
** @angular/cli included.
** Yarn package manager updated.
** Python3 updated.
** Spyder3 IDE integrated in python3 installation updated.
** devon4ng-application-template for Angular 6 at workspaces/examples


=== My Thai Star Sample Application

The new release of My Thai Star has focused on the following improvements:

* Release 1.6.0.
* Travis CI integration with Docker. Now we get a valuable feedback of the current status and when collaborators make pull requests.
* Docker compose deployment. 
* devon4j:
** Flyway upgrade from 3.2.1 to 4.2.0
** Bug fixes.
* devon4ng:
** Client devon4ng updated to Angular 6.
** Frontend translated into 9 languages.
** Improved mobile and tablet views. 
** Routing fade animations.
** Compodoc included to generate dynamically frontend documentation. 

=== Documentation updates
The following contents in the devonfw guide have been updated:

* devonfw OSS modules documentation.
* Creating a new devon4j application.
* How to update Angular CLI in devonfw.
* Include Angular i18n. 

Apart from this the documentation has been reviewed and some typos and errors have been fixed. 

The current development of the guide has been moved to https://github.com/devonfw/devonfw-guide/wiki in order to be available as the rest of OSS assets.

=== devon4j
The following changes have been incorporated in devon4j:

* Integrate batch with archetype.
* Application module structure and dependencies improved.
* Issues with Application Template fixed. 
* Solved issue where Eclipse maven template devon4j-template-server version 2.4.0 produced pom with missing dependency spring-boot-starter-jdbc.
* Solved datasource issue with project archetype 2.4.0.
* Decouple archetype from sample (restaurant).
* Upgrade to Flyway 4.
* Fix for issue with Java 1.8 and QueryDSL #599.

=== devon4ng
The following changes have been incorporated in devon4ng:

* First version of the new client application architecture guide https://github.com/devonfw/devon4ng/wiki/meta-architecture#devonfw-reference-client-architecture
* Angular CLI 6,
* Angular 6,
* Angular Material 6 and Covalent 2.0.0-beta.1,
* Ionic 3.20.0,
* Cordova 8.0.0,
* devon4ng Angular application template updated to Angular 6 with visual improvements and bugfixes https://github.com/devonfw/devon4ng-application-template 
* devon4ng Ionic application template updated and improved https://github.com/devonfw/devon4ng-ionic-application-template 
* PWA enabled.

=== AppSec Quick Solution Guide
 
This release incorporates a new Solution Guide for Application Security based on the state of the art in OWASP based application security. The purpose of this guide is to offer quick solutions for common application security issues for all applications based on devonfw.  It’s often the case that we need our systems to comply to certain sets of security requirements and standards. Each of these requirements needs to be understood, addressed and converted to code or project activity. We want this guide to prevent the wheel from being reinvented over and over again and to give clear hints and solutions to common security problems.

* The wiki can be accessed here: https://github.com/devonfw/devonfw-security/wiki
* The PDF can be accessed here: https://github.com/devonfw/devonfw-security
 
=== CobiGen
* CobiGen_Templates project and docs updated.
* CobiGen Angular 6 generation improved based on the updated application template
* CobiGen Ionic CRUD App generation based on Ionic application template. Although a first version was already implemented, it has been deeply improved:
** Changed the code structure to comply with Ionic standards.
** Added pagination.
** Pull-to-refresh, swipe and attributes header implemented.
** Code documented and JSDoc enabled (similar to Javadoc)
* CobiGen TSPlugin Interface Merge support.
* CobiGen XML plugin comes out with new cool features:
** Enabled the use of XPath within variable assignment. You can now retrieve almost any data from an XML file and store it on a variable for further processing on the templates. Documented here.
** Able to generate multiple output files per XML input file.
** Generating code from UML diagrams. XMI files (standard XML for UML) can be now read and processed. This means that you can develop templates and generate code from an XMI like class diagrams.
* CobiGen OpenAPI plugin released with multiple bug-fixes and other functionalities like:
** Assigning global and local variables is now possible. Therefore you can set any string for further processing on the templates. For instance, changing the root package name of the generated files. Documented here.
** Enabled having a class with more than one relationship to another class (more than one property of the same type).
* CobiGen Text merger plugin has been extended and now it is able to merge text blocks. This means, for example, that the generation and merging of AsciiDoc documentation is possible. Documented here.

=== Devcon 
A new version of Devcon has been released. Fixes and new features include:

* Now Devcon is OSS, with public repository at https://github.com/devonfw/devcon 
* Updated to match current devon4j
* Update to download Linux distribution.
* Custom modules creation improvements.
* Bugfixes. 

=== devonfw OSS Modules
* Existing devonfw IP modules have been moved to OSS. 
** They can now be accessed in any devon4j project as optional dependencies from Maven Central.
** The repository now has public access https://github.com/devonfw/devon
* Starters available for modules:
** Reporting module
** WinAuth AD Module
** WinAuth SSO Module
** I18n Module
** Async Module
** Integration Module
** Microservice Module
** Compose for Redis Module 

See: https://github.com/devonfw/devon/wiki#devonfw-modules  

=== devonfw Shop Floor 

* devonfw Shop Floor 4 Docker
** Docker-based CICD environment
*** docker-compose.yml (installation file)
*** dsf4docker.sh (installation script)
*** Service Integration (documentation in Wiki)
** devonfw projects build and deployment with Docker
*** Dockerfiles (multi-stage building)
**** Build artifact (NodeJS for Angular and Maven for Java)
**** Deploy built artifact (NGINX for Angular and Tomcat for Java)
**** NGINX Reverse-Proxy to redirect traffic between both Angular client and Java server containers.
* devonfw Shop Floor 4 OpenShift
** devonfw projects deployment in OpenShift cluster
*** s2i images
*** OpenShift templates
*** Video showcase (OpenShift Origin 3.6)

This incubator is intended to be a compilation of DevOps experiences from the devonfw perspective. “How we use our devonfw projects in DevOps environments”. Integration with the Production Line, creation and service integration of a Docker-based CI environment and deploying devonfw applications in an OpenShift Origin cluster using devonfw templates.
See: https://github.com/devonfw/devonfw-shop-floor

=== devonfw Testing 

The MrChecker Test Framework is an automated testing framework for functional testing of web applications, API web services, Service Virtualization, Security and in coming future native mobile apps, and databases. All modules have tangible examples of how to build resilient integration test cases based on delivered functions. 

* Examples available under embedded project “MrChecker-App-Under-Test” and in project wiki: https://github.com/devonfw/devonfw-testing/wiki 
* How to install: 
** Wiki : https://github.com/devonfw/devonfw-testing/wiki/How-to-install  
* Release Note: 
** module core - 4.12.0.8: 
*** fixes on getting Environment values
*** top notch example how to keep vulnerable data in repo , like passwords
** module selenium - 3.8.1.8:
*** browser driver auto downloader
*** list of out off the box examples to use in any web page 
** module webAPI - ver. 1.0.2 : 
*** api service virtualization with REST and SOAP examples
*** api service virtualization with dynamic arguments 
*** REST working test examples with page object model
** module security - 1.0.1 (security tests against My Thai Start)
** module DevOps :
*** dockerfile for Test environment execution
*** CI + CD as Jenkinsfile code

=== devonfw methodology: Accelerated Solution Design

One of the prime challenges in Distributed Agile Delivery is the maintenance of a common understanding and unity of intent among all participants in the process of creating a product. That is: how can you guarantee that different parties in the client, different providers, all in different locations and time zones during a particular period of time actually understand the requirements of the client, the proposed solution space and the state of implementation.

We offer the Accelerated Solution Design as a possible answer to these challenges. The ASD is carefully designed to be a practical guideline that fosters and ensures the collaboration and communication among all team members. 

The Accelerated Solution Design is:

* A practical guideline rather than a “methodology”
* Based on industry standards rather than proprietary methods
* Consisting of an evolving, “living”, document set rather than a static, fixed document
* Encapsulating the business requirements, functional definitions as well as Architecture design
* Based on the intersection of Lean, Agile, DDD and User Story Mapping

And further it is based on the essential belief or paradigm that ASD should be:

* Focused on the design (definition) of the “externally observable behavior of a system”
* Promoting communication and collaboration between team members
* Guided by prototypes

For more on the devonfw Methodology / ASD, see: 
https://github.com/devonfw/devon-methodology/blob/master/design-guidelines/Accelerated_Solution_Design.adoc
